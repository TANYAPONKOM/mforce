import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_application_1/service/apiservice.dart';
import 'package:flutter_application_1/service/helper.dart';
import 'package:flutter_application_1/widget/BackgroundCustNew.dart';
import 'package:flutter_application_1/widget/notificationWidget.dart';
import 'package:flutter_application_1/maps/maps.dart';
import 'package:flutter_application_1/page/level2/customerInfo.dart';
import 'package:flutter_application_1/page/level2/account_new_cust.dart';
import 'package:flutter_application_1/page/detailedit/detailedit.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:get/get.dart';
import 'package:logger/logger.dart';

class addnewCust extends StatefulWidget {
  const addnewCust({super.key});

  @override
  State<addnewCust> createState() => _addnewCust();
}

class _addnewCust extends State<addnewCust> {
  final double topWidgetHeight = 112.0;
  final double avatarRadius = 50.0;
  late dynamic empcode = 10000;
  late dynamic NotificationCount = 0;
  helper helperController = Get.put(helper());
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.transparent,
      body: Stack(
        children: [
          background(
            topWidgetHeight: topWidgetHeight,
            avatarRadius: avatarRadius,
            empcode: empcode.toString(),
            version: helperController.version.value,
            count: NotificationCount,
          ),
          Padding(
            padding:
                const EdgeInsets.only(top: 40, left: 16, right: 16, bottom: 12),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // ‚úÖ ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô: ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô + ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ + ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏Ç‡∏ß‡∏≤
                Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    IconButton(
                      icon: Icon(Icons.arrow_back, color: Colors.black),
                      onPressed: () {
                        Navigator.pushReplacement(
                          context,
                          MaterialPageRoute(builder: (context) => newCust()),
                        );
                      },
                    ),
                    SizedBox(width: 12),
                    Text(
                      '‡∏Ç‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà',
                      style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                        color: Colors.black,
                      ),
                    ),
                    Spacer(), // ‚úÖ ‡∏î‡∏±‡∏ô‡πÉ‡∏´‡πâ icon ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏∏‡∏î
                    Icon(
                      Icons.check_circle_outline,
                      color: Colors.black,
                      size: 30,
                    ),
                  ],
                ),

                SizedBox(height: 10),

                // ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å Row ‡∏≠‡∏¢‡∏π‡πà‡∏•‡πà‡∏≤‡∏á‡∏•‡∏á‡∏°‡∏≤
                Text(
                  '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ\n'
                  '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å',
                  style: TextStyle(
                    fontWeight: FontWeight.bold,
                    fontSize: 12,
                    color: Colors.black87,
                  ),
                ),
              ],
            ),
          ),

          // ‚úÖ ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß 80% ‡∏•‡πà‡∏≤‡∏á ‡∏Ç‡∏≠‡∏ö‡∏°‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
          Positioned(
            top: MediaQuery.of(context).size.height * 0.2, // 20% ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
            left: 0,
            right: 0,
            bottom: 0,
            child: Container(
              decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.only(
                  topLeft: Radius.circular(50),
                  topRight: Radius.circular(50),
                ),
              ),
              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 20),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Text(
                    '‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà',
                    style: TextStyle(
                      fontWeight: FontWeight.bold,
                      fontSize: 16,
                    ),
                  ),
                  SizedBox(height: 12),

                  Align(
                    alignment: Alignment.centerLeft,
                    child: Text(
                      '‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏±‡∏ç‡∏ä‡∏µ',
                      style: TextStyle(
                        fontWeight: FontWeight.bold,
                        fontSize: 16,
                      ),
                    ),
                  ),

                  SizedBox(height: 30),

                  // ‚úÖ Step cards
                  buildStepCard(
                    1,
                    '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤',
                    () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (context) =>
                                customerInfoPage()), // üëà ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
                      );
                    },
                  ),

                  buildStepCard(
                    2,
                    '‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
                    () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (context) =>
                                customerInfoPage()), // üëà ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
                      );
                    },
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}

Widget buildStepCard(int stepNumber, String title, VoidCallback onTap) {
  return GestureDetector(
    onTap: onTap,
    child: Container(
      margin: EdgeInsets.only(bottom: 12),
      padding: EdgeInsets.symmetric(horizontal: 12, vertical: 14),
      decoration: BoxDecoration(
        color: Colors.white,
        border: Border.all(color: Colors.grey.shade300),
        borderRadius: BorderRadius.circular(16),
      ),
      child: Row(
        children: [
          // üîµ ‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÄ‡∏•‡∏Ç‡∏•‡∏≥‡∏î‡∏±‡∏ö
          Container(
            width: 36,
            height: 36,
            decoration: BoxDecoration(
              color: Colors.grey.shade200,
              shape: BoxShape.circle,
            ),
            alignment: Alignment.center,
            child: Text(
              '$stepNumber',
              style: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 16,
                color: Colors.black87,
              ),
            ),
          ),
          SizedBox(width: 12),
          // üìù ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
          Expanded(
            child: Text(
              title,
              style: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 14,
                color: Colors.black,
              ),
            ),
          ),
          Icon(Icons.chevron_right, color: Colors.black),
        ],
      ),
    ),
  );
}
